Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a(strcpy_P.o)
                              ./stk500protocol.o (strcpy_P)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv/usbdrv.o
stkAddress          0x4               ./stk500protocol.o
serialRingBuffer    0x66              ./serial.o
usbTxStatus1        0xc               ./usbdrv/usbdrv.o
HVok                0x1               ./hvprog.o
timerTimeoutCnt     0x1               ./timer.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
timerLongTimeoutCnt
                    0x1               ./timer.o
vREG_REF            0x2               ./vreg.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o
usbTxStatus3        0xc               ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./hvprog.o
LOAD ./isp.o
LOAD ./main.o
LOAD ./picprog.o
LOAD ./serial.o
LOAD ./stk500protocol.o
LOAD ./timer.o
LOAD ./utils.o
LOAD ./vreg.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1f7c
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.stkEvaluateRxMessage
                0x00000026       0xa4 ./stk500protocol.o
                0x000000ca                . = ALIGN (0x2)
                0x000000ca                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000ca        0x0 linker stubs
 *(.trampolines*)
                0x000000ca                __trampolines_end = .
 *(.progmem*)
 .progmem.data.usbDescriptorStringSerialNumber
                0x000000ca       0x14 ./usbdrv/usbdrv.o
                0x000000ca                usbDescriptorStringSerialNumber
 .progmem.data.usbDescriptorStringDevice
                0x000000de       0x14 ./usbdrv/usbdrv.o
                0x000000de                usbDescriptorStringDevice
 .progmem.data.usbDescriptorStringVendor
                0x000000f2       0x12 ./usbdrv/usbdrv.o
                0x000000f2                usbDescriptorStringVendor
 .progmem.data.usbDescriptorString0
                0x00000104        0x4 ./usbdrv/usbdrv.o
                0x00000104                usbDescriptorString0
 .progmem.data.usbDescriptorHidReport
                0x00000108       0x3c ./main.o
                0x00000108                usbDescriptorHidReport
 .progmem.data.configDescrHID
                0x00000144       0x22 ./main.o
 .progmem.data.deviceDescrHID
                0x00000166       0x12 ./main.o
 .progmem.data.configDescrCDC
                0x00000178       0x43 ./main.o
 .progmem.data.deviceDescrCDC
                0x000001bb       0x12 ./main.o
 .progmem.data.string.2101
                0x000001cd        0xa ./stk500protocol.o
                0x000001d8                . = ALIGN (0x2)
 *fill*         0x000001d7        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000001d8                __ctors_start = .
 *(.ctors)
                0x000001d8                __ctors_end = .
                0x000001d8                __dtors_start = .
 *(.dtors)
                0x000001d8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000001d8        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x000001d8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000001d8        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000001e4       0x16 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                0x000001e4                __do_copy_data
 .init4         0x000001fa       0x10 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000001fa                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000020a        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000020e        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000020e                __vector_12
                0x0000020e                __bad_interrupt
                0x0000020e                __vector_6
                0x0000020e                __vector_3
                0x0000020e                __vector_13
                0x0000020e                __vector_17
                0x0000020e                __vector_7
                0x0000020e                __vector_5
                0x0000020e                __vector_4
                0x0000020e                __vector_2
                0x0000020e                __vector_15
                0x0000020e                __vector_8
                0x0000020e                __vector_10
                0x0000020e                __vector_16
                0x0000020e                __vector_18
 .text          0x00000210        0x0 ./usbdrv/oddebug.o
 .text          0x00000210        0x0 ./usbdrv/usbdrv.o
 .text          0x00000210      0x2c2 ./usbdrv/usbdrvasm.o
                0x00000210                usbCrc16
                0x0000023a                usbCrc16Append
                0x00000242                __vector_1
 .text          0x000004d2        0x0 ./hvprog.o
 .text          0x000004d2        0x0 ./isp.o
 .text          0x000004d2        0x0 ./main.o
 .text          0x000004d2        0x0 ./picprog.o
 .text          0x000004d2        0x0 ./serial.o
 .text          0x000004d2        0x0 ./stk500protocol.o
 .text          0x000004d2        0x0 ./timer.o
 .text          0x000004d2        0x0 ./utils.o
 .text          0x000004d2        0x0 ./vreg.o
 .text          0x000004d2        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x000004d2        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text          0x000004d2        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text          0x000004d2        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a(strcpy_P.o)
                0x000004d2                . = ALIGN (0x2)
 *(.text.*)
 .text.usbGenericSetInterrupt
                0x000004d2       0x44 ./usbdrv/usbdrv.o
 .text.usbSetInterrupt
                0x00000516        0x6 ./usbdrv/usbdrv.o
                0x00000516                usbSetInterrupt
 .text.usbSetInterrupt3
                0x0000051c        0x6 ./usbdrv/usbdrv.o
                0x0000051c                usbSetInterrupt3
 .text.usbPoll  0x00000522      0x256 ./usbdrv/usbdrv.o
                0x00000522                usbPoll
 .text.usbInit  0x00000778       0x22 ./usbdrv/usbdrv.o
                0x00000778                usbInit
 .text.hvSetControlAndData
                0x0000079a       0xc4 ./hvprog.o
 .text.hvReadFuse
                0x0000085e       0x1c ./hvprog.o
 .text.hvspPoll
                0x0000087a       0x1a ./hvprog.o
 .text.hvChipErase
                0x00000894       0x36 ./hvprog.o
 .text.hvProgramFuse
                0x000008ca       0x34 ./hvprog.o
 .text.hvspEnterProgmode
                0x000008fe       0x32 ./hvprog.o
                0x000008fe                hvspEnterProgmode
 .text.hvspLeaveProgmode
                0x00000930        0xa ./hvprog.o
                0x00000930                hvspLeaveProgmode
 .text.ppEnterProgmode
                0x0000093a       0x60 ./hvprog.o
                0x0000093a                ppEnterProgmode
 .text.ppLeaveProgmode
                0x0000099a        0x6 ./hvprog.o
                0x0000099a                ppLeaveProgmode
 .text.hvspChipErase
                0x000009a0        0xc ./hvprog.o
                0x000009a0                hvspChipErase
 .text.ppChipErase
                0x000009ac        0xc ./hvprog.o
                0x000009ac                ppChipErase
 .text.hvspProgramMemory
                0x000009b8      0x150 ./hvprog.o
                0x000009b8                hvspProgramMemory
 .text.hvspReadMemory
                0x00000b08       0x98 ./hvprog.o
                0x00000b08                hvspReadMemory
 .text.hvspProgramFuse
                0x00000ba0       0x22 ./hvprog.o
                0x00000ba0                hvspProgramFuse
 .text.hvspProgramLock
                0x00000bc2       0x10 ./hvprog.o
                0x00000bc2                hvspProgramLock
 .text.ppProgramFuse
                0x00000bd2       0x2a ./hvprog.o
                0x00000bd2                ppProgramFuse
 .text.ppProgramLock
                0x00000bfc       0x10 ./hvprog.o
                0x00000bfc                ppProgramLock
 .text.hvspReadFuse
                0x00000c0c       0x1e ./hvprog.o
                0x00000c0c                hvspReadFuse
 .text.hvspReadLock
                0x00000c2a        0x4 ./hvprog.o
                0x00000c2a                hvspReadLock
 .text.hvspReadSignature
                0x00000c2e       0x20 ./hvprog.o
                0x00000c2e                hvspReadSignature
 .text.hvspReadOsccal
                0x00000c4e       0x18 ./hvprog.o
                0x00000c4e                hvspReadOsccal
 .text.ispDetachFromDevice
                0x00000c66       0x16 ./isp.o
 .text.ispBlockTransfer
                0x00000c7c       0x68 ./isp.o
 .text.waitUntilReady
                0x00000ce4       0x2e ./isp.o
 .text.ispEnterProgmode
                0x00000d12       0xfc ./isp.o
                0x00000d12                ispEnterProgmode
 .text.ispLeaveProgmode
                0x00000e0e       0x14 ./isp.o
                0x00000e0e                ispLeaveProgmode
 .text.ispChipErase
                0x00000e22       0x34 ./isp.o
                0x00000e22                ispChipErase
 .text.ispProgramMemory
                0x00000e56      0x17e ./isp.o
                0x00000e56                ispProgramMemory
 .text.ispReadMemory
                0x00000fd4       0xd0 ./isp.o
                0x00000fd4                ispReadMemory
 .text.ispProgramFuse
                0x000010a4        0x8 ./isp.o
                0x000010a4                ispProgramFuse
 .text.ispReadFuse
                0x000010ac       0x30 ./isp.o
                0x000010ac                ispReadFuse
 .text.ispMulti
                0x000010dc       0xae ./isp.o
                0x000010dc                ispMulti
 .text.usbFunctionDescriptor
                0x0000118a       0x48 ./main.o
                0x0000118a                usbFunctionDescriptor
 .text.usbFunctionSetup
                0x000011d2       0x7a ./main.o
                0x000011d2                usbFunctionSetup
 .text.usbFunctionRead
                0x0000124c      0x158 ./main.o
                0x0000124c                usbFunctionRead
 .text.usbFunctionWrite
                0x000013a4       0xc4 ./main.o
                0x000013a4                usbFunctionWrite
 .text.usbFunctionWriteOut
                0x00001468       0x2e ./main.o
                0x00001468                usbFunctionWriteOut
 .text.startup.main
                0x00001496       0xce ./main.o
                0x00001496                main
 .text.clock_delay
                0x00001564       0x12 ./picprog.o
                0x00001564                clock_delay
 .text.iscpPrepareProgmode
                0x00001576       0x16 ./picprog.o
                0x00001576                iscpPrepareProgmode
 .text.iscpLeaveProgmode
                0x0000158c       0x1a ./picprog.o
                0x0000158c                iscpLeaveProgmode
 .text.pic_send_n_bits
                0x000015a6       0x5e ./picprog.o
                0x000015a6                pic_send_n_bits
 .text.send_clock
                0x00001604       0x26 ./picprog.o
                0x00001604                send_clock
 .text.dspic_send_24_bits
                0x0000162a       0x52 ./picprog.o
                0x0000162a                dspic_send_24_bits
 .text.pic_read
                0x0000167c       0x64 ./picprog.o
                0x0000167c                pic_read
 .text.pic_read_14_bits
                0x000016e0       0x38 ./picprog.o
                0x000016e0                pic_read_14_bits
 .text.pic_read_byte2
                0x00001718       0x22 ./picprog.o
                0x00001718                pic_read_byte2
 .text.dspic_read_16_bits
                0x0000173a       0x22 ./picprog.o
                0x0000173a                dspic_read_16_bits
 .text.iscpRunProgmode
                0x0000175c      0x250 ./picprog.o
                0x0000175c                iscpRunProgmode
 .text.__vector_11
                0x000019ac       0x4c ./serial.o
                0x000019ac                __vector_11
 .text.serialInit
                0x000019f8       0x10 ./serial.o
                0x000019f8                serialInit
 .text.serialStop
                0x00001a08        0xa ./serial.o
                0x00001a08                serialStop
 .text.stkSetTxMessage
                0x00001a12       0x58 ./stk500protocol.o
 .text.stkIncrementAddress
                0x00001a6a       0x28 ./stk500protocol.o
                0x00001a6a                stkIncrementAddress
 .text.stkEvaluateRxMessage
                0x00001a92      0x1c6 ./stk500protocol.o
                0x00001a92                stkEvaluateRxMessage
 .text.stkSetRxChar
                0x00001c58       0xf2 ./stk500protocol.o
                0x00001c58                stkSetRxChar
 .text.stkGetTxCount
                0x00001d4a       0x16 ./stk500protocol.o
                0x00001d4a                stkGetTxCount
 .text.stkGetTxByte
                0x00001d60       0x4c ./stk500protocol.o
                0x00001d60                stkGetTxByte
 .text.stkPoll  0x00001dac       0x10 ./stk500protocol.o
                0x00001dac                stkPoll
 .text.timerTicksDelay
                0x00001dbc       0x16 ./timer.o
                0x00001dbc                timerTicksDelay
 .text.__vector_9
                0x00001dd2       0x5e ./timer.o
                0x00001dd2                __vector_9
 .text.timerSetupTimeout
                0x00001e30       0x10 ./timer.o
                0x00001e30                timerSetupTimeout
 .text.timerMsDelay
                0x00001e40        0xc ./timer.o
                0x00001e40                timerMsDelay
 .text.HVgenOn  0x00001e4c       0x10 ./utils.o
                0x00001e4c                HVgenOn
 .text.HVgenOff
                0x00001e5c        0xa ./utils.o
                0x00001e5c                HVgenOff
 .text.OutShByte
                0x00001e66       0x32 ./utils.o
                0x00001e66                OutShByte
 .text.IOReset  0x00001e98       0x2a ./utils.o
                0x00001e98                IOReset
 .text.__vector_14
                0x00001ec2       0x90 ./vreg.o
                0x00001ec2                __vector_14
 .text.vregInit
                0x00001f52       0x18 ./vreg.o
                0x00001f52                vregInit
 .text.libgcc.mul
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00001f6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00001f6a        0xe /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a(strcpy_P.o)
                0x00001f6a                strcpy_P
                0x00001f78                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001f78        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x00001f78                exit
                0x00001f78                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001f78        0x4 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00001f7c                _etext = .

.data           0x00800060       0x36 load address 0x00001f7c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./usbdrv/oddebug.o
 .data          0x00800060        0x0 ./usbdrv/usbdrv.o
 .data          0x00800060        0x0 ./usbdrv/usbdrvasm.o
 .data          0x00800060        0x0 ./hvprog.o
 .data          0x00800060        0x0 ./isp.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 ./picprog.o
 .data          0x00800060        0x0 ./serial.o
 .data          0x00800060        0x0 ./stk500protocol.o
 .data          0x00800060        0x0 ./timer.o
 .data          0x00800060        0x0 ./utils.o
 .data          0x00800060        0x0 ./vreg.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a(strcpy_P.o)
 *(.data*)
 .data.usbMsgLen
                0x00800060        0x1 ./usbdrv/usbdrv.o
 .data.usbTxLen
                0x00800061        0x1 ./usbdrv/usbdrv.o
                0x00800061                usbTxLen
 .data.serialStateData.2232
                0x00800062        0x2 ./main.o
 .data.serialStateNotification.2231
                0x00800064        0x8 ./main.o
 .data.sendEmptyFrame.2224
                0x0080006c        0x1 ./main.o
 .data.modeBuffer
                0x0080006d        0x7 ./main.o
 .data.stkParam
                0x00800074       0x20 ./stk500protocol.o
                0x00800074                stkParam
 .data.prescaler.1643
                0x00800094        0x1 ./timer.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800096                . = ALIGN (0x2)
 *fill*         0x00800095        0x1 
                0x00800096                _edata = .
                0x00800096                PROVIDE (__data_end, .)

.bss            0x00800096      0x303
                0x00800096                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800096        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .bss           0x00800096        0x0 ./usbdrv/oddebug.o
 .bss           0x00800096        0x0 ./usbdrv/usbdrv.o
 .bss           0x00800096        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x00800096        0x0 ./hvprog.o
 .bss           0x00800096        0x0 ./isp.o
 .bss           0x00800096        0x0 ./main.o
 .bss           0x00800096        0x0 ./picprog.o
 .bss           0x00800096        0x0 ./serial.o
 .bss           0x00800096        0x0 ./stk500protocol.o
 .bss           0x00800096        0x0 ./timer.o
 .bss           0x00800096        0x0 ./utils.o
 .bss           0x00800096        0x0 ./vreg.o
 .bss           0x00800096        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x00800096        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .bss           0x00800096        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00800096        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a(strcpy_P.o)
 *(.bss*)
 .bss.usbMsgFlags
                0x00800096        0x1 ./usbdrv/usbdrv.o
 .bss.hvPollTimeout
                0x00800097        0x1 ./hvprog.o
 .bss.progModeIsPp
                0x00800098        0x1 ./hvprog.o
 .bss.cmdBuffer
                0x00800099        0x4 ./isp.o
 .bss.ispClockDelay
                0x0080009d        0x1 ./isp.o
 .bss.buffer.2225
                0x0080009e        0x8 ./main.o
 .bss.totalRemaining.2184
                0x008000a6        0x1 ./main.o
 .bss.useHIDInterface
                0x008000a7        0x1 ./main.o
 .bss.requestType
                0x008000a8        0x1 ./main.o
 .bss.hidStatus
                0x008000a9        0x1 ./main.o
 .bss.intr3Status
                0x008000aa        0x1 ./main.o
 .bss.clock_delay_cnt
                0x008000ab        0x1 ./picprog.o
                0x008000ab                clock_delay_cnt
 .bss.UCSRBMirror
                0x008000ac        0x1 ./serial.o
 .bss.txLen     0x008000ad        0x2 ./stk500protocol.o
 .bss.txPos     0x008000af        0x2 ./stk500protocol.o
 .bss.txBuffer  0x008000b1      0x119 ./stk500protocol.o
 .bss.rxBlockAvailable
                0x008001ca        0x1 ./stk500protocol.o
 .bss.rxLen     0x008001cb        0x2 ./stk500protocol.o
 .bss.rxPos     0x008001cd        0x2 ./stk500protocol.o
 .bss.rxBuffer  0x008001cf      0x119 ./stk500protocol.o
 *(COMMON)
 COMMON         0x008002e8       0x42 ./usbdrv/usbdrv.o
                0x008002e8                usbTxBuf
                0x008002f3                usbTxStatus1
                0x008002ff                usbDeviceAddr
                0x00800300                usbRxToken
                0x00800301                usbInputBufOffset
                0x00800302                usbMsgPtr
                0x00800304                usbRxLen
                0x00800305                usbNewDeviceAddr
                0x00800306                usbCurrentTok
                0x00800307                usbConfiguration
                0x00800308                usbRxBuf
                0x0080031e                usbTxStatus3
 COMMON         0x0080032a        0x1 ./hvprog.o
                0x0080032a                HVok
 COMMON         0x0080032b       0x66 ./serial.o
                0x0080032b                serialRingBuffer
 COMMON         0x00800391        0x4 ./stk500protocol.o
                0x00800391                stkAddress
 COMMON         0x00800395        0x2 ./timer.o
                0x00800395                timerTimeoutCnt
                0x00800396                timerLongTimeoutCnt
 COMMON         0x00800397        0x2 ./vreg.o
                0x00800397                vREG_REF
                0x00800399                PROVIDE (__bss_end, .)
                0x00001f7c                __data_load_start = LOADADDR (.data)
                0x00001fb2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800399        0x0
                0x00800399                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800399                PROVIDE (__noinit_end, .)
                0x00800399                _end = .
                0x00800399                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 ./usbdrv/oddebug.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ./usbdrv/usbdrv.o
 .comment       0x00000000       0x12 ./hvprog.o
 .comment       0x00000000       0x12 ./isp.o
 .comment       0x00000000       0x12 ./main.o
 .comment       0x00000000       0x12 ./picprog.o
 .comment       0x00000000       0x12 ./serial.o
 .comment       0x00000000       0x12 ./stk500protocol.o
 .comment       0x00000000       0x12 ./timer.o
 .comment       0x00000000       0x12 ./utils.o
 .comment       0x00000000       0x12 ./vreg.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(MultiProg.elf elf32-avr)
LOAD linker stubs
